diff -urNp coreutils-5.97-orig/lib/closeout.c coreutils-5.97/lib/closeout.c
--- coreutils-5.97-orig/lib/closeout.c	2005-09-22 07:05:39.000000000 +0100
+++ coreutils-5.97/lib/closeout.c	2010-07-02 16:14:56.000000000 +0100
@@ -74,6 +74,7 @@ void
 close_stdout (void)
 {
   bool prev_fail = ferror (stdout);
+  int ep = prev_fail ? errno : 0; /* OSM */
   bool none_pending = (0 == __fpending (stdout));
   bool fclose_fail = fclose (stdout);
 
@@ -91,6 +92,12 @@ close_stdout (void)
       if (e == EBADF && !prev_fail && none_pending)
 	return;
 
+      /* OSM: If write failure was caused by pipe/socketpair closure, 
+       * be quiet. 
+       */
+      if (ep == EPIPE || ep == ECONNRESET || e == EPIPE || e == ECONNRESET)
+	return;
+
       write_error = _("write error");
       if (file_name)
 	error (exit_failure, e, "%s: %s", quotearg_colon (file_name),
diff -urNp coreutils-5.97-orig/src/sort.c coreutils-5.97/src/sort.c
--- coreutils-5.97-orig/src/sort.c	2005-10-07 19:48:28.000000000 +0100
+++ coreutils-5.97/src/sort.c	2010-07-02 16:14:30.000000000 +0100
@@ -487,12 +487,14 @@ xfclose (FILE *fp, char const *file)
 
     case STDOUT_FILENO:
       /* Don't close stdout just yet.  close_stdout does that.  */
-      if (fflush (fp) != 0)
+      /* OSM: keep failure quiet if due to pipeline */
+      if (fflush (fp) != 0 && errno != EPIPE && errno != ECONNRESET)
 	die (_("fflush failed"), file);
       break;
 
     default:
-      if (fclose (fp) != 0)
+      /* OSM: keep failure quiet if due to pipeline */
+      if (fclose (fp) != 0 && errno != EPIPE && errno != ECONNRESET)
 	die (_("close failed"), file);
       break;
     }
@@ -501,8 +503,14 @@ xfclose (FILE *fp, char const *file)
 static void
 write_bytes (const char *buf, size_t n_bytes, FILE *fp, const char *output_file)
 {
-  if (fwrite (buf, 1, n_bytes, fp) != n_bytes)
-    die (_("write failed"), output_file);
+  if (fwrite (buf, 1, n_bytes, fp) != n_bytes) {
+    /* OSM: fail quietly if due to pipeline */
+    if (errno != EPIPE && errno != ECONNRESET) {
+	die (_("write failed"), output_file);
+    } else {
+        exit(SORT_FAILURE);
+    }
+  }
 }
 
 /* Append DIR to the array of temporary directory names.  */
